# https://patriksvensson.se/posts/2020/03/creating-release-artifacts-with-github-actions

name: .NET

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  release:
    name: Release
    strategy:
      matrix:
        # kind: ['linux', 'windows', 'macOS']
        kind: ['linux', 'windows', 'macOS']
        include:
          # - kind: linux
          #   os: ubuntu-latest
          #   target: linux-x64
          - kind: windows
            os: windows-latest
            target: win-x64
          # - kind: macOS
          #   os: macos-latest
          #   target: osx-x64
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 7.0.x
    - name: Build
      shell: bash
      run: |
        # Define some variables for things we need
        tag=$(git describe --tags --abbrev=0)
        release_name="goddamn-github-actions-$tag-${{ matrix.target }}"

        # Build everything
        dotnet publish src/goddamn-github-actions/goddamn-github-actions.csproj --runtime "${{ matrix.target }}" -c Release -o "$release_name"

        # Pack files
        if [ "${{ matrix.target }}" == "win-x64" ]; then
          7z a -tzip "${release_name}.zip" "./${release_name}/*"
        else
          tar czvf "${release_name}.tar.gz" "$release_name"
        fi

        # Delete output directory
        rm -r "$release_name"
    - name: Publish
      uses: softprops/action-gh-release@v1
      with:
        files: "goddamn-github-actions-*"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
